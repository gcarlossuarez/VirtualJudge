// <auto-generated />
using System;
using CsJudgeApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CsJudgeApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908005809_AddValidatorPathToQuestion")]
    partial class AddValidatorPathToQuestion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("CsJudgeApi.Models.Contest", b =>
                {
                    b.Property<int>("ContestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.HasKey("ContestId");

                    b.ToTable("Contests");
                });

            modelBuilder.Entity("CsJudgeApi.Models.ContestStudent", b =>
                {
                    b.Property<int>("ContestId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateParticipation")
                        .HasColumnType("TEXT");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ContestId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ContestStudents");
                });

            modelBuilder.Entity("CsJudgeApi.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ContestId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FullPathValidatorSourceCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("QuestionId");

                    b.HasIndex("ContestId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("CsJudgeApi.Models.Student", b =>
                {
                    b.Property<long>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("StudentId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("CsJudgeApi.Models.Submission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BuildLog")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("IP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MemKb")
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputActual")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OutputExpected")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProblemId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RunLog")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("StudentId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Time")
                        .HasColumnType("TEXT");

                    b.HasKey("SubmissionId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("CsJudgeApi.Models.ContestStudent", b =>
                {
                    b.HasOne("CsJudgeApi.Models.Contest", "Contest")
                        .WithMany("Students")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CsJudgeApi.Models.Student", "Student")
                        .WithMany("Contests")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contest");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CsJudgeApi.Models.Question", b =>
                {
                    b.HasOne("CsJudgeApi.Models.Contest", "Contest")
                        .WithMany("Questions")
                        .HasForeignKey("ContestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contest");
                });

            modelBuilder.Entity("CsJudgeApi.Models.Contest", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("CsJudgeApi.Models.Student", b =>
                {
                    b.Navigation("Contests");
                });
#pragma warning restore 612, 618
        }
    }
}
